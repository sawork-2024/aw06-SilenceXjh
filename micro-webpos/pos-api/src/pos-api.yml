openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /products:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: update the product's quantity
      operationId: updateProductQuantity
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quantity'
      responses:
        '200':
          description: updated product info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /orders:
    get:
      summary: List all the orders
      operationId: listAllOrders
      tags:
        - orders
      responses:
        '200':
          description: An array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: save a new order
      operationId: saveOrder
      tags:
       - orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        '200':
          description: the saved order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /orders/{orderId}:
    get:
      summary: Info for a specific order
      operationId: showOrderById
      tags:
        - order
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the specific order
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        price:
          type: number
        category:
          type: string
        quantity:
          type: integer
        name:
          type: string
        stock:
          type: integer
        img:
          type: string
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Quantity:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: integer
    Item:
      type: object
      required:
        - productName
        - amount
        - price
      properties:
        productName:
          type: string
        amount:
          type: integer
        price:
          type: number
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Order:
      type: object
      properties:
        orderNumber:
          type: integer
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        date:
          type: string
        subTotal:
          type: number
        discount:
          type: number
        total:
          type: number
        paid:
          type: number
        change:
          type: number
        paymentType:
          type: string
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"